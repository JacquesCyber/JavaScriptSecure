name: Security Scan

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.stats()'" --health-interval 10s --health-timeout 5s --health-retries 5
    
    env:
      MONGODB_URI: mongodb://localhost:27017/test_db
      NODE_ENV: test
    
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔐 Create certificates (for crypto functions)
        run: |
          # Create minimal certs for your crypto functions
          openssl genrsa -out private.pem 2048
          openssl rsa -in private.pem -pubout -out public.pem
          echo "✅ Created crypto certificates"
          
      - name: 🚀 Start app (HTTP for testing)
        run: |
          npm run test:server &
          APP_PID=$!
          echo "APP_PID=$APP_PID" >> $GITHUB_ENV
          echo "🚀 Starting HTTP server for security testing..."
          sleep 10
          
      - name: 🧪 Wait for health check
        run: |
          for i in {1..15}; do
            if curl --silent --fail http://localhost:3000/health; then
              echo "✅ Server is healthy!"
              break
            fi
            echo "⏳ Waiting for server... ($i/15)"
            sleep 2
          done
          
          # Verify server is actually running
          if ! curl --silent --fail http://localhost:3000/health; then
            echo "❌ Server failed to start"
            exit 1
          fi
          
      - name: 🛡️ Run OWASP ZAP Security Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:3000'
          fail_action: false
          
      - name: 📁 Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ github.run_number }}
          path: report_html.html
          retention-days: 30
          
      - name: 🧹 Cleanup
        if: always()
        run: |
          if [ ! -z "$APP_PID" ]; then
            echo "🛑 Stopping server (PID: $APP_PID)"
            kill $APP_PID || true
          fi